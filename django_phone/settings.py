"""
Django settings for django_phone project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY','your-secret-key')  

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'contacts.apps.ContactsConfig',
    'django_filters',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djradicale',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_phone.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_phone.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#         # 'ATOMIC_REQUESTS': True,
#         'timeout': 200,
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django-phone',
        'USER': 'postgres',
        'PASSWORD': 'Oq86Nigu',
        'HOST': 'localhost',
        'PORT': '5433',
    }
}



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
# https://docs.djangoproject.com/en/1.11/topics/i18n/translation/#how-django-discovers-language-preference

#LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_ROOT = "./static/"
STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAdminUser',
    ]
}

# https://pypi.python.org/pypi/django-captcha-admin
RECAPTCHA_ADMIN = eval(os.environ.get('RECAPTCHA_ADMIN_ENABLE','False'))
    
if RECAPTCHA_ADMIN:
    INSTALLED_APPS += [
        'captcha_admin',
        'captcha',
    ]
    RECAPTCHA_PUBLIC_KEY = os.environ.get('RECAPTCHA_PUBLIC_KEY') 
    RECAPTCHA_PRIVATE_KEY = os.environ.get('RECAPTCHA_PRIVATE_KEY') 
    
    
###############  DJRadicale ########################
STATIC_URL = '/static/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'djradicale': {
            'handlers': ['console'],
            'level': 'DEBUG',
            # 'level': 'ERROR',
            'propagate': True,
        },
    }
}

DJRADICALE_CONFIG = {
    # 'server': {
    #     'base_prefix': '/pim/',
    #     'realm': 'Radicale - Password Required',
    # },
    # 'encoding': {
    #     'request': 'utf-8',
    #     'stock': 'utf-8',
    # },
    'auth': {
        'type': 'djradicale.auth.django',
    },
    'rights': {
        'type': 'djradicale.rights.django',
    },
    'storage': {
        'type': 'djradicale.storage.django',
    },
    # 'well-known': {
    #     'carddav': '/pim/%(user)s/addressbook.vcf',
    #     'caldav': '/pim/%(user)s/calendar.ics',
    # },
}

DJRADICALE_CONFIG_EXTRA = {
    'server': {
        'base_prefix': '/pim/',
    },
}

DJRADICALE_RIGHTS = {
    'rw': {
        'user': '.+',
        'collection': '^/%(login)s/[a-z0-9\.\-_]+\.(vcf|ics)$/',
        'permission': 'rw',
    },
    'rw-root': {
        'user': '.+',
        'collection': '^/%(login)s/$',
        'permission': 'rw',
    },
    'rw-pim': {
        'user': '.+',
        'collection': '^/pim/%(login)s/[a-z0-9\.\-_]+\.(vcf|ics)$/',
        'permission': 'rw',
    },
    'rw-root-pim': {
        'user': '.+',
        'collection': '^/pim/%(login)s/$',
        'permission': 'rw',
    },
}

###############  END DJRadicale ########################